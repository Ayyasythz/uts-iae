version: '3.8'

services:
  # PostgreSQL databases
  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend-network

  # RabbitMQ message broker
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"   # AMQP protocol
      - "15672:15672" # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend-network

  # User Service
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - POSTGRES_URI=postgres://postgres:postgres@postgres:5432/user_service
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure
    networks:
      - backend-network

  # Product Service
  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - POSTGRES_URI=postgres://postgres:postgres@postgres:5432/product_service
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672/
      - USER_SERVICE_URL=http://user-service:8081
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      user-service:
        condition: service_started
    restart: on-failure
    networks:
      - backend-network

  # Order Service
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "8084:8083"  # Changed host port to 8084 to avoid conflict
    environment:
      - POSTGRES_URI=postgres://postgres:postgres@postgres:5432/order_service
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672/
      - USER_SERVICE_URL=http://user-service:8081
      - PRODUCT_SERVICE_URL=http://product-service:8082
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      user-service:
        condition: service_started
      product-service:
        condition: service_started
    restart: on-failure
    networks:
      - backend-network

volumes:
  postgres_data:

networks:
  backend-network:
    driver: bridge